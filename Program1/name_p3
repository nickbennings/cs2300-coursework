// name_p3
using System;
using System.IO;

namespace MatrixAlgebraAssignment.name_p3
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter the input file for the first matrix (e.g., prussell_mat1.txt): ");
            string matrixFile1 = Console.ReadLine();

            Console.WriteLine("Enter the input file for the second matrix (e.g., prussell_mat2.txt): ");
            string matrixFile2 = Console.ReadLine();

            Console.WriteLine("Enter the output file name for the multiplication result (e.g., prussell_p3_out12.txt): ");
            string outputMultiplicationFile = Console.ReadLine();

            PerformMatrixMultiplication(matrixFile1, matrixFile2, outputMultiplicationFile);

            Console.WriteLine("Matrix multiplication completed and saved to " + outputMultiplicationFile);
        }

        private static void PerformMatrixMultiplication(string inputFile1, string inputFile2, string outputFile)
        {
            int[,] matrix1 = ReadMatrixFromFile(inputFile1);
            int[,] matrix2 = ReadMatrixFromFile(inputFile2);

            if (matrix1 == null || matrix2 == null)
            {
                Console.WriteLine("Error: Unable to read input matrices.");
                return;
            }

            if (matrix1.GetLength(1) != matrix2.GetLength(0))
            {
                Console.WriteLine("Error: Number of columns in the first matrix must be equal to the number of rows in the second matrix for matrix multiplication.");
                return;
            }

            int[,] result = MultiplyMatrices(matrix1, matrix2);

            WriteMatrixToFile(result, outputFile);
        }

        private static int[,] MultiplyMatrices(int[,] matrix1, int[,] matrix2)
        {
            int rows1 = matrix1.GetLength(0);
            int cols1 = matrix1.GetLength(1);
            int cols2 = matrix2.GetLength(1);

            int[,] result = new int[rows1, cols2];

            for (int i = 0; i < rows1; i++)
            {
                for (int j = 0; j < cols2; j++)
                {
                    for (int k = 0; k < cols1; k++)
                    {
                        result[i, j] += matrix1[i, k] * matrix2[k, j];
                    }
                }
            }

            return result;
        }

        private static int[,] ReadMatrixFromFile(string fileName)
        {
            try
            {
                string[] lines = File.ReadAllLines(fileName);
                int rows = lines.Length;
                int columns = lines[0].Split(' ').Length;
                int[,] matrix = new int[rows, columns];

                for (int i = 0; i < rows; i++)
                {
                    string[] values = lines[i].Split(' ');

                    for (int j = 0; j < columns; j++)
                    {
                        matrix[i, j] = int.Parse(values[j]);
                    }
                }

                return matrix;
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error: " + ex.Message);
                return null;
            }
        }

        private static void WriteMatrixToFile(int[,] matrix, string fileName)
        {
            using (StreamWriter writer = new StreamWriter(fileName))
            {
                int rows = matrix.GetLength(0);
                int columns = matrix.GetLength(1);

                for (int i = 0; i < rows; i++)
                {
                    for (int j = 0; j < columns; j++)
                    {
                        writer.Write(matrix[i, j] + " ");
                    }
                    writer.WriteLine();
                }
            }
        }
    }
}

