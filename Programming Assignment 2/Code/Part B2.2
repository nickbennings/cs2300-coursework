using System;

class Program
{
    static void Main(string[] args)
    {
        // Input the augmented matrix 
        double[,] augmentedMatrix = ReadAugmentedMatrixFromFile("augmented_matrix.txt");

        // Solve the system using elimination
        double[] solutions = SolveWithGaussJordan(augmentedMatrix);

        // Print the solutions
        Console.WriteLine("Solutions:");
        PrintArray(solutions);
    }

    static double[] SolveWithGaussJordan(double[,] matrix)
    {
        int n = matrix.GetLength(0);
        int m = matrix.GetLength(1) - 1;
        double[] solutions = new double[n];

        for (int i = 0; i < n; i++)
        {
            double pivot = matrix[i, i];
            for (int j = 0; j <= m; j++)
            {
                matrix[i, j] /= pivot;
            }
            for (int k = 0; k < n; k++)
            {
                if (k != i)
                {
                    double factor = matrix[k, i];
                    for (int j = 0; j <= m; j++)
                    {
                        matrix[k, j] -= factor * matrix[i, j];
                    }
                }
            }
        }

        // Extract the solutions from the last column
        for (int i = 0; i < n; i++)
        {
            solutions[i] = matrix[i, m];
        }

        return solutions;
    }

    static double[,] ReadAugmentedMatrixFromFile(string filename)
    {
       
        throw new NotImplementedException("Implement reading from a file");
    }

    static void PrintArray(double[] array)
    {
        for (int i = 0; i < array.Length; i++)
        {
            Console.WriteLine($"Solution {i + 1}: {array[i]}");
        }
    }
}
